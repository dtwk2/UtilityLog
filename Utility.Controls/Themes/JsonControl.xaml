<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:controls="clr-namespace:Utility.Controls"
    xmlns:jlinq="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
    xmlns:local="clr-namespace:Pcs.Hfrr.Log.View">

    <ObjectDataProvider
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Key="MyEnumValues"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type xmlns:json="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" TypeName="json:JTokenType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <ItemsControl x:Key="ItemsControlToolTip" ItemsSource="{Binding Source={StaticResource MyEnumValues}}">
        <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type jlinq:JTokenType}">
                <Border
                    Margin="5"
                    BorderThickness="1"
                    CornerRadius="3,3,3,3">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{Binding Converter={x:Static controls:Converters.JTokenTypeToColorConverter}}" />
                    </Border.BorderBrush>
                    <Label Content="{Binding Mode=OneWay}" Foreground="WhiteSmoke">
                        <Label.Background>
                            <SolidColorBrush Color="{Binding Converter={x:Static controls:Converters.JTokenTypeToColorConverter}}" />
                        </Label.Background>
                    </Label>
                </Border>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>

    <HierarchicalDataTemplate DataType="{x:Type jlinq:JArray}" ItemsSource="{Binding ., Converter={x:Static controls:Converters.MethodToValueConverter}, ConverterParameter='Children'}">
        <StackPanel Margin="1" Orientation="Horizontal">
            <TextBlock
                Margin="0,0,5,0"
                Padding="3,0,3,1"
                Background="#a40000"
                Foreground="WhiteSmoke"
                Opacity="0.4"
                Text="array" />
            <TextBlock Foreground="#a40000" Text="{Binding Converter={StaticResource JArrayLengthConverter}}" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate
        x:Key="ArrayPropertyTemplate"
        DataType="{x:Type jlinq:JProperty}"
        ItemsSource="{Binding Converter={x:Static controls:Converters.ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
        <StackPanel Margin="1" Orientation="Horizontal">
            <TextBlock Width="100" Text="{Binding Path=Name, Mode=OneWay}" />

            <TextBlock
                Margin="0,0,5,0"
                Padding="3,0,3,1"
                Background="#a40000"
                Foreground="WhiteSmoke"
                Opacity="0.4"
                Text="array" />
            <TextBlock Foreground="#a40000" Text="{Binding Converter={x:Static controls:Converters.JArrayLengthConverter}}" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate
        x:Key="ObjectPropertyTemplate"
        DataType="{x:Type jlinq:JProperty}"
        ItemsSource="{Binding ., Converter={x:Static controls:Converters.ComplexPropertyMethodToValueConverter}, ConverterParameter='Children'}">
        <StackPanel Margin="1" Orientation="Horizontal">
            <TextBlock
                Width="100"
                Text="{Binding Path=Name, Mode=OneWay}"
                ToolTip="{}{ }" />
            <TextBlock
                Width="100"
                Text="2222dsf"
                ToolTip="{}{ }" />
            <TextBlock Foreground="#729fcf" Text="{}{ }" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="PrimitivePropertyTemplate" DataType="{x:Type jlinq:JProperty}">
        <StackPanel Margin="1" Orientation="Horizontal">
            <TextBlock
                Width="120"
                HorizontalAlignment="Right"
                Opacity="0.7"
                Text="{Binding Path=Name, Mode=OneWay}" />

            <TextBlock
                HorizontalAlignment="Left"
                Text="{Binding Value, Converter={x:Static controls:Converters.JTokenConverter}}"
                TextWrapping="Wrap"
                ToolTip="{StaticResource ItemsControlToolTip}">
                <TextBlock.Foreground>
                    <SolidColorBrush Color="{Binding Path=Value.Type, Converter={x:Static controls:Converters.JTokenTypeToColorConverter}}" />
                </TextBlock.Foreground>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{x:Static controls:Commands.FooCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type jlinq:JObject}" ItemsSource="{Binding ., Converter={x:Static controls:Converters.MethodToValueConverter}, ConverterParameter='Children'}">
        <TextBlock
            Width="100"
            HorizontalAlignment="Right"
            Opacity="0.7"
            Text=" { }" />
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type jlinq:JConstructor}" ItemsSource="{Binding ., Converter={x:Static controls:Converters.MethodToValueConverter}, ConverterParameter='Children'}">
        <TextBlock Text="Constructor" />
    </HierarchicalDataTemplate>
    <HierarchicalDataTemplate DataType="{x:Type jlinq:JRaw}" ItemsSource="{Binding ., Converter={x:Static controls:Converters.MethodToValueConverter}, ConverterParameter='Children'}">
        <TextBlock Text="Raw" />
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type jlinq:JValue}">
        <Grid>

            <TextBlock
                Width="{Binding RelativeSource={RelativeSource AncestorType=TreeView}}"
                Foreground="{Binding Type, Converter={x:Static controls:Converters.JTokenTypeToColorConverter}}"
                Text="{Binding Converter={StaticResource JTokenConverter}}"
                TextWrapping="Wrap">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{x:Static controls:Commands.FooCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </TextBlock>
        </Grid>

    </DataTemplate>


    <!--<TreeView Padding="20" Margin="20, -10" Name="JsonTreeView" IsTextSearchEnabled="True" ItemTemplateSelector="{x:Static local:TemplateSelector.JPropertyDataTemplateSelector}" DockPanel.Dock="Bottom" BorderThickness="0">-->

    <Style x:Key="JsonTreeViewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="False" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type TreeView}}" TargetType="{x:Type controls:JsonControl}">
        <Setter Property="Padding" Value="20" />
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="ItemTemplateSelector" Value="{x:Static controls:TemplateSelector.JPropertyDataTemplateSelector}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource JsonTreeViewItem}" />
        <!--<Setter Property="CommandBindings">
            <Setter.Value>

            </Setter.Value>
        </Setter>-->
    </Style>

    <!--<TreeView
        Name="JsonTreeView"
        Margin="20,-10"
        Padding="20"
        BorderThickness="0"
        DockPanel.Dock="Bottom"
        IsTextSearchEnabled="True"
        ItemTemplateSelector="{x:Static controls:TemplateSelector.JPropertyDataTemplateSelector}">
        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="False" />
            </Style>
        </TreeView.ItemContainerStyle>
    </TreeView>-->

</ResourceDictionary>